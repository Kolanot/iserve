<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://nbcr.sdsc.edu/opal" xmlns:intf="http://nbcr.sdsc.edu/opal" xmlns:tns1="http://nbcr.sdsc.edu/opal/types" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://nbcr.sdsc.edu/opal">
<wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Blast
      -p  Program Name [String]
  -d  Database [String]
    default = nr
  -i  Query File [File In]
    default = stdin
  -e  Expectation value (E) [Real]
    default = 10.0
  -m  alignment view options:
0 = pairwise,
1 = query-anchored showing identities,
2 = query-anchored no identities,
3 = flat query-anchored, show identities,
4 = flat query-anchored, no identities,
5 = query-anchored no identities and blunt ends,
6 = flat query-anchored, no identities and blunt ends,
7 = XML Blast output,
8 = tabular, 
9 tabular with comment lines
10 ASN, text
11 ASN, binary [Integer]
    default = 0
    range from 0 to 11
  -o  BLAST report Output File [File Out]  Optional
    default = stdout
  -F  Filter query sequence (DUST with blastn, SEG with others) [String]
    default = T
  -G  Cost to open a gap (-1 invokes default behavior) [Integer]
    default = -1
  -E  Cost to extend a gap (-1 invokes default behavior) [Integer]
    default = -1
  -X  X dropoff value for gapped alignment (in bits) (zero invokes default behavior)
      blastn 30, megablast 20, tblastx 0, all others 15 [Integer]
    default = 0
  -I  Show GI's in deflines [T/F]
    default = F
  -q  Penalty for a nucleotide mismatch (blastn only) [Integer]
    default = -3
  -r  Reward for a nucleotide match (blastn only) [Integer]
    default = 1
  -v  Number of database sequences to show one-line descriptions for (V) [Integer]
    default = 500
  -b  Number of database sequence to show alignments for (B) [Integer]
    default = 250
  -f  Threshold for extending hits, default if zero
      blastp 11, blastn 0, blastx 12, tblastn 13
      tblastx 13, megablast 0 [Real]
    default = 0
  -g  Perform gapped alignment (not available with tblastx) [T/F]
    default = T
  -Q  Query Genetic code to use [Integer]
    default = 1
  -D  DB Genetic code (for tblast[nx] only) [Integer]
    default = 1
  -a  Number of processors to use [Integer]
    default = 1
  -O  SeqAlign file [File Out]  Optional
  -J  Believe the query defline [T/F]
    default = F
  -M  Matrix [String]
    default = BLOSUM62
  -W  Word size, default if zero (blastn 11, megablast 28, all others 3) [Integer]
    default = 0
  -z  Effective length of the database (use zero for the real size) [Real]
    default = 0
  -K  Number of best hits from a region to keep. Off by default.
If used a value of 100 is recommended.  Very high values of -v or -b is also suggested [Integer]
    default = 0
  -P  0 for multiple hit, 1 for single hit (does not apply to blastn) [Integer]
    default = 0
  -Y  Effective length of the search space (use zero for the real size) [Real]
    default = 0
  -S  Query strands to search against database (for blast[nx], and tblastx)
       3 is both, 1 is top, 2 is bottom [Integer]
    default = 3
  -T  Produce HTML output [T/F]
    default = F
  -l  Restrict search of database to list of GI's [String]  Optional
  -U  Use lower case filtering of FASTA sequence [T/F]  Optional
  -y  X dropoff value for ungapped extensions in bits (0.0 invokes default behavior)
      blastn 20, megablast 10, all others 7 [Real]
    default = 0.0
  -Z  X dropoff value for final gapped alignment in bits (0.0 invokes default behavior)
      blastn/megablast 100, tblastx 0, all others 25 [Integer]
    default = 0
  -R  PSI-TBLASTN checkpoint file [File In]  Optional
  -n  MegaBlast search [T/F]
    default = F
  -L  Location on query sequence [String]  Optional
  -A  Multiple Hits window size, default if zero (blastn/megablast 0, all others 40 [Integer]
    default = 0
  -w  Frame shift penalty (OOF algorithm for blastx) [Integer]
    default = 0
  -t  Length of the largest intron allowed in a translated nucleotide sequence when linking multiple distinct alignments. (0 invokes default behavior; a negative value disables linking.) [Integer]
    default = 0
  -B  Number of concatenated queries, for blastn and tblastn [Integer]  Optional
    default = 0
  -V  Force use of the legacy BLAST engine [T/F]  Optional
    default = F
  -C  Use composition-based score adjustments for blastp or tblastn:
      As first character:
      D or d: default (equivalent to T)
      0 or F or f: no composition-based statistics
      2 or T or t: Composition-based score adjustments as in Bioinformatics 21:902-911,
      1: Composition-based statistics as in NAR 29:2994-3005, 2001
          2005, conditioned on sequence properties
      3: Composition-based score adjustment as in Bioinformatics 21:902-911,
          2005, unconditionally
      For programs other than tblastn, must either be absent or be D, F or 0.
           As second character, if first character is equivalent to 1, 2, or 3:
      U or u: unified p-value combining alignment p-value and compositional p-value in round 1 only
 [String]
    default = D
  -s  Compute locally optimal Smith-Waterman alignments (This option is only
      available for gapped tblastn.) [T/F]
    default = F
    
    </wsdl:documentation>
<!--WSDL created by Apache Axis version: 1.2.1
Built on Jun 14, 2005 (09:15:57 EDT)-->
 <wsdl:types>
  <schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://nbcr.sdsc.edu/opal/types">
   <import namespace="http://xml.apache.org/xml-soap"/>
   <complexType name="AppMetadataInputType">
    <sequence/>
   </complexType>
   <element name="getAppMetadataInput" type="tns1:AppMetadataInputType"/>
   <complexType name="FlagsType">
    <sequence>
     <element name="id" type="xsd:ID"/>
     <element name="tag" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="default" nillable="true" type="xsd:boolean"/>
     <element maxOccurs="1" minOccurs="0" name="textDesc" type="xsd:string"/>
    </sequence>
   </complexType>
   <complexType name="FlagsArrayType">
    <sequence>
     <element maxOccurs="unbounded" minOccurs="0" name="flag" type="tns1:FlagsType"/>
    </sequence>
   </complexType>
   <simpleType name="ParamType">
    <restriction base="xsd:string">
     <enumeration value="INT"/>
     <enumeration value="BOOL"/>
     <enumeration value="FLOAT"/>
     <enumeration value="STRING"/>
     <enumeration value="FILE"/>
     <enumeration value="URL"/>
    </restriction>
   </simpleType>
   <simpleType name="IOType">
    <restriction base="xsd:string">
     <enumeration value="INPUT"/>
     <enumeration value="OUTPUT"/>
     <enumeration value="INOUT"/>
    </restriction>
   </simpleType>
   <complexType name="ParamsType">
    <sequence>
     <element name="id" type="xsd:ID"/>
     <element maxOccurs="1" minOccurs="0" name="tag" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="default" nillable="true" type="xsd:string"/>
     <element name="paramType" type="tns1:ParamType"/>
     <element maxOccurs="1" minOccurs="0" name="ioType" type="tns1:IOType"/>
     <element maxOccurs="1" minOccurs="0" name="required" type="xsd:boolean"/>
     <element maxOccurs="unbounded" minOccurs="0" name="value" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="semanticType" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="textDesc" type="xsd:string"/>
    </sequence>
   </complexType>
   <complexType name="ParamsArrayType">
    <sequence>
     <element maxOccurs="1" minOccurs="0" name="separator" type="xsd:string"/>
     <element maxOccurs="unbounded" minOccurs="0" name="param" type="tns1:ParamsType"/>
    </sequence>
   </complexType>
   <complexType name="ImplicitParamsType">
    <sequence>
     <element name="id" type="xsd:ID"/>
     <element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="extension" type="xsd:string"/>
     <element name="ioType" type="tns1:IOType"/>
     <element maxOccurs="1" minOccurs="0" name="required" type="xsd:boolean"/>
     <element maxOccurs="1" minOccurs="0" name="semanticType" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="textDesc" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="min" type="xsd:int"/>
     <element maxOccurs="1" minOccurs="0" name="max" type="xsd:int"/>
    </sequence>
   </complexType>
   <complexType name="ImplicitParamsArrayType">
    <sequence>
     <element maxOccurs="unbounded" minOccurs="0" name="param" type="tns1:ImplicitParamsType"/>
    </sequence>
   </complexType>
   <complexType name="GroupsType">
    <sequence>
     <element maxOccurs="1" minOccurs="0" name="id" type="xsd:ID"/>
     <element name="name" type="xsd:string"/>
     <element name="elements" type="xsd:IDREFS"/>
     <element maxOccurs="1" minOccurs="0" name="required" type="xsd:boolean"/>
     <element maxOccurs="1" minOccurs="0" name="exclusive" type="xsd:boolean"/>
     <element maxOccurs="1" minOccurs="0" name="semanticType" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="textDesc" type="xsd:string"/>
    </sequence>
   </complexType>
   <complexType name="GroupsArrayType">
    <sequence>
     <element maxOccurs="unbounded" minOccurs="0" name="group" type="tns1:GroupsType"/>
    </sequence>
   </complexType>
   <complexType name="ArgumentsType">
    <sequence>
     <element maxOccurs="1" minOccurs="0" name="flags" type="tns1:FlagsArrayType"/>
     <element maxOccurs="1" minOccurs="0" name="taggedParams" type="tns1:ParamsArrayType"/>
     <element maxOccurs="1" minOccurs="0" name="untaggedParams" type="tns1:ParamsArrayType"/>
     <element maxOccurs="1" minOccurs="0" name="implicitParams" type="tns1:ImplicitParamsArrayType"/>
     <element maxOccurs="1" minOccurs="0" name="groups" type="tns1:GroupsArrayType"/>
    </sequence>
   </complexType>
   <complexType name="AppMetadataType">
    <sequence>
     <element name="usage" type="xsd:string"/>
     <element maxOccurs="unbounded" minOccurs="0" name="info" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="version" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="types" type="tns1:ArgumentsType"/>
    </sequence>
    <attribute name="appName" type="xsd:string"/>
   </complexType>
   <element name="getAppMetadataOutput" type="tns1:AppMetadataType"/>
   <complexType name="FaultType">
    <sequence>
     <element name="message" nillable="true" type="xsd:string"/>
    </sequence>
   </complexType>
   <element name="opalFaultOutput" type="tns1:FaultType"/>
   <complexType name="AppConfigInputType">
    <sequence/>
   </complexType>
   <element name="getAppConfigInput" type="tns1:AppConfigInputType"/>
   <complexType name="AppConfigType">
    <sequence>
     <element name="metadata" type="tns1:AppMetadataType"/>
     <element name="binaryLocation" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="defaultArgs" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="validateArgs" type="xsd:boolean"/>
     <element maxOccurs="1" minOccurs="0" name="jobManagerFQCN" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="globusGatekeeper" type="xsd:anyURI"/>
     <element maxOccurs="1" minOccurs="0" name="gridftpBase" type="xsd:anyURI"/>
     <element name="parallel" type="xsd:boolean"/>
    </sequence>
   </complexType>
   <element name="getAppConfigOutput" type="tns1:AppConfigType"/>
   <complexType name="InputFileType">
    <sequence>
     <element name="name" type="xsd:string"/>
     <element maxOccurs="1" minOccurs="0" name="contents" type="xsd:base64Binary"/>
     <element maxOccurs="1" minOccurs="0" name="location" type="xsd:anyURI"/>
     <element maxOccurs="1" minOccurs="0" name="attachment" type="apachesoap:DataHandler"/>
    </sequence>
   </complexType>
   <complexType name="JobInputType">
    <xsd:sequence xmlns:opal="http://nbcr.sdsc.edu/opal/types">
<xsd:element name="program" maxOccurs="1" minOccurs="1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The program name</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="database" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A sequence database. See available databases at http://banks.genouest.org/BmajWatcher/</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="query" maxOccurs="1" minOccurs="1" type="tns1:InputFileType">
<xsd:annotation>
<xsd:documentation>Query file.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="expectation" maxOccurs="1" minOccurs="0" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Expectation value (default is 10.0).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="outputFormat" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Alignment view options. Ranges from 0 to 11. Default is 0.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="output" maxOccurs="1" minOccurs="1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Output file name.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="filterQuery" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Filter query sequence (DUST with blastn, SEG with others). Default is T.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="costOpenGap" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Cost to open a gap (-1 invokes default behavior).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="costExtendGap" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Cost to extend a gap (-1 invokes default behavior).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="xDropoff" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>X dropoff value for gapped alignment (in bits) (zero invokes default behavior).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="showGIs" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Show GI's in deflines. Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="penaltyNucleotideMismatch" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Penalty for a nucleotide mismatch (blastn only). Default = -3</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="rewardNucleotideMatch" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Reward for a nucleotide match (blastn only). Default = 1</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="dbSequenceDescriptionNumberToShow" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Number of database sequences to show one-line descriptions for. Default = 500.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="dbSequenceAlignementsNumberToShow" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Number of database sequence to show alignments for. Default = 250.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="hitsExtensionThreshold" maxOccurs="1" minOccurs="0" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Threshold for extending hits, default if zero: blastp 11, blastn 0, blastx 12, tblastn 13, tblastx 13, megablast 0. Default=0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="gapped" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Perform gapped alignment (not available with tblastx). Default is T.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="queryGeneticCode" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Query Genetic code to use. Default = 1.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="dbGeneticCode" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>DB Genetic code (for tblast[nx] only). Default = 1.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="seqalignFile" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>SeqAlign file.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="believeQueryDefline" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Believe the query defline. Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="matrix" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Matrix. Default = BLOSUM62</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="wordSize" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Word size, default if zero (blastn 11, megablast 28, all others 3). Default = 0.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="lengthDatabase" maxOccurs="1" minOccurs="0" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Effective length of the database (use zero for the real size). Default=0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="bestHitsNumberToKeep" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Number of best hits from a region to keep. Off by default. If used a value of 100 is recommended. Very high values of -v or -b is also suggested. Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="multipleHit" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>0 for multiple hit, 1 for single hit (does not apply to blastn). Default=0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="lengthSearchSpace" maxOccurs="1" minOccurs="0" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Effective length of the search space (use zero for the real size). Default=0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="queryStrands" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Query strands to search against database (for blast[nx], and tblastx) 3 is both, 1 is top, 2 is bottom. Default = 3</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="htmlOutput" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Produce HTML output. Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="restrictDbToGIs" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Restrict search of database to list of GI's</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="lowerCase" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Use lower case filtering of FASTA sequence.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="xDropoffUngapped" maxOccurs="1" minOccurs="0" type="xsd:float">
<xsd:annotation>
<xsd:documentation>X dropoff value for ungapped extensions in bits (0.0 invokes default behavior) blastn 20, megablast 10, all others 7. Default = 0.0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="xDropoffFinalGapped" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>X dropoff value for final gapped alignment in bits (0.0 invokes default behavior) blastn/megablast 100, tblastx 0, all others 25. Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="psiTblastnCheckpoint" maxOccurs="1" minOccurs="0" type="tns1:InputFileType">
<xsd:annotation>
<xsd:documentation>PSI-TBLASTN checkpoint file.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="megablast" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>MegaBlast search. Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="locationQuery" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Location on query sequence.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="multipleHitWindowSize" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Multiple Hits window size, default if zero (blastn/megablast 0, all others 40. Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="frameShiftPenalty" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Frame shift penalty (OOF algorithm for blastx). Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="lengthLargestIntron" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Length of the largest intron allowed in a translated nucleotide sequence when linking multiple distinct alignments. (0 invokes default behavior; a negative value disables linking.). Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="concatenatedQueriesNumber" maxOccurs="1" minOccurs="0" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Number of concatenated queries, for blastn and tblastn. Default = 0</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="legacy" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Force use of the legacy BLAST engine. Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="smithWaterman" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Compute locally optimal Smith-Waterman alignments (This option is only available for gapped tblastn.). Default is F.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="scoreAdjustments" maxOccurs="1" minOccurs="0" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Use composition-based score adjustments for blastp or tblastn: see blastall man page. Default is D.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element type="xsd:int" name="numProcs" minOccurs="0" maxOccurs="1"/>
<xsd:element type="xsd:nonNegativeInteger" name="wallClockTime" minOccurs="0" maxOccurs="1"/>
<xsd:element type="xsd:string" name="userEmail" minOccurs="0" maxOccurs="1"/>
<xsd:element type="xsd:string" name="password" minOccurs="0" maxOccurs="1"/>
<xsd:element type="xsd:boolean" name="sendNotification" minOccurs="0" maxOccurs="1"/>
</xsd:sequence>
   </complexType>
   <element name="launchJobInput" type="tns1:JobInputType"/>
   <complexType name="StatusOutputType">
    <sequence>
     <element name="code" type="xsd:int"/>
     <element name="message" type="xsd:string"/>
     <element name="baseURL" type="xsd:anyURI"/>
    </sequence>
   </complexType>
   <complexType name="JobSubOutputType">
    <sequence>
     <element name="jobID" type="xsd:string"/>
     <element name="status" type="tns1:StatusOutputType"/>
    </sequence>
   </complexType>
   <element name="launchJobOutput" type="tns1:JobSubOutputType"/>
   <element name="launchJobBlockingInput" type="tns1:JobInputType"/>
   <complexType name="OutputFileType">
    <sequence>
     <element name="name" type="xsd:string"/>
     <element name="url" type="xsd:anyURI"/>
    </sequence>
   </complexType>
   <complexType name="JobOutputType">
    <sequence>
     <element maxOccurs="1" minOccurs="0" name="stdOut" type="xsd:anyURI"/>
     <element maxOccurs="1" minOccurs="0" name="stdErr" type="xsd:anyURI"/>
     <element maxOccurs="unbounded" minOccurs="0" name="outputFile" type="tns1:OutputFileType"/>
    </sequence>
   </complexType>
   <complexType name="BlockingOutputType">
    <sequence>
     <element name="status" type="tns1:StatusOutputType"/>
     <element name="jobOut" type="tns1:JobOutputType"/>
    </sequence>
   </complexType>
   <element name="launchJobBlockingOutput" type="tns1:BlockingOutputType"/>
   <element name="queryStatusInput" type="xsd:string"/>
   <element name="queryStatusOutput" type="tns1:StatusOutputType"/>
   <element name="getJobStatisticsInput" type="xsd:string"/>
   <complexType name="JobStatisticsType">
    <sequence>
     <element maxOccurs="1" minOccurs="0" name="startTime" type="xsd:dateTime"/>
     <element maxOccurs="1" minOccurs="0" name="activationTime" type="xsd:dateTime"/>
     <element maxOccurs="1" minOccurs="0" name="completionTime" type="xsd:dateTime"/>
    </sequence>
   </complexType>
   <element name="getJobStatisticsOutput" type="tns1:JobStatisticsType"/>
   <element name="getOutputsInput" type="xsd:string"/>
   <element name="getOutputsOutput" type="tns1:JobOutputType"/>
   <complexType name="OutputsByNameInputType">
    <sequence>
     <element name="jobID" type="xsd:string"/>
     <element name="fileName" type="xsd:string"/>
    </sequence>
   </complexType>
   <element name="getOutputAsBase64ByNameInput" type="tns1:OutputsByNameInputType"/>
   <element name="getOutputAsBase64ByNameOutput">
    <complexType>
     <sequence>
      <element maxOccurs="unbounded" minOccurs="0" name="item" type="xsd:byte"/>
     </sequence>
    </complexType>
   </element>
   <element name="destroyInput" type="xsd:string"/>
   <element name="destroyOutput" type="tns1:StatusOutputType"/>
  </schema>
 </wsdl:types>

   <wsdl:message name="getJobStatisticsRequest">

      <wsdl:part element="tns1:getJobStatisticsInput" name="getJobStatisticsInput"/>

   </wsdl:message>

   <wsdl:message name="getAppConfigRequest">

      <wsdl:part element="tns1:getAppConfigInput" name="getAppConfigInput"/>

   </wsdl:message>

   <wsdl:message name="getOutputAsBase64ByNameRequest">

      <wsdl:part element="tns1:getOutputAsBase64ByNameInput" name="getOutputAsBase64ByNameInput"/>

   </wsdl:message>

   <wsdl:message name="FaultType">

      <wsdl:part element="tns1:opalFaultOutput" name="opalFaultOutput"/>

   </wsdl:message>

   <wsdl:message name="getOutputAsBase64ByNameResponse">

      <wsdl:part element="tns1:getOutputAsBase64ByNameOutput" name="getOutputAsBase64ByNameOutput"/>

   </wsdl:message>

   <wsdl:message name="getJobStatisticsResponse">

      <wsdl:part element="tns1:getJobStatisticsOutput" name="getJobStatisticsOutput"/>

   </wsdl:message>

   <wsdl:message name="getAppConfigResponse">

      <wsdl:part element="tns1:getAppConfigOutput" name="getAppConfigOutput"/>

   </wsdl:message>

   <wsdl:message name="getAppMetadataRequest">

      <wsdl:part element="tns1:getAppMetadataInput" name="getAppMetadataInput"/>

   </wsdl:message>

   <wsdl:message name="launchJobResponse">

      <wsdl:part element="tns1:launchJobOutput" name="launchJobOutput"/>

   </wsdl:message>

   <wsdl:message name="getOutputsResponse">

      <wsdl:part element="tns1:getOutputsOutput" name="getOutputsOutput"/>

   </wsdl:message>

   <wsdl:message name="getAppMetadataResponse">

      <wsdl:part element="tns1:getAppMetadataOutput" name="getAppMetadataOutput"/>

   </wsdl:message>

   <wsdl:message name="launchJobRequest">

      <wsdl:part element="tns1:launchJobInput" name="launchJobInput"/>

   </wsdl:message>

   <wsdl:message name="destroyResponse">

      <wsdl:part element="tns1:destroyOutput" name="destroyOutput"/>

   </wsdl:message>

   <wsdl:message name="launchJobBlockingResponse">

      <wsdl:part element="tns1:launchJobBlockingOutput" name="launchJobBlockingOutput"/>

   </wsdl:message>

   <wsdl:message name="queryStatusResponse">

      <wsdl:part element="tns1:queryStatusOutput" name="queryStatusOutput"/>

   </wsdl:message>

   <wsdl:message name="queryStatusRequest">

      <wsdl:part element="tns1:queryStatusInput" name="queryStatusInput"/>

   </wsdl:message>

   <wsdl:message name="destroyRequest">

      <wsdl:part element="tns1:destroyInput" name="destroyInput"/>

   </wsdl:message>

   <wsdl:message name="getOutputsRequest">

      <wsdl:part element="tns1:getOutputsInput" name="getOutputsInput"/>

   </wsdl:message>

   <wsdl:message name="launchJobBlockingRequest">

      <wsdl:part element="tns1:launchJobBlockingInput" name="launchJobBlockingInput"/>

   </wsdl:message>

   <wsdl:portType name="AppServicePortType">

      <wsdl:operation name="getAppMetadata" parameterOrder="getAppMetadataInput">

         <wsdl:input message="impl:getAppMetadataRequest" name="getAppMetadataRequest"/>

         <wsdl:output message="impl:getAppMetadataResponse" name="getAppMetadataResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Returns metadata about the application. This includes usage information, along with any number of arbitrary application-specific metadata specified as an array of info elements, e.g. description of the various options that are passed to the application binary.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="getAppConfig" parameterOrder="getAppConfigInput">

         <wsdl:input message="impl:getAppConfigRequest" name="getAppConfigRequest"/>

         <wsdl:output message="impl:getAppConfigResponse" name="getAppConfigResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      </wsdl:operation>

      <wsdl:operation name="launchJob" parameterOrder="launchJobInput">

         <wsdl:input message="impl:launchJobRequest" name="launchJobRequest"/>

         <wsdl:output message="impl:launchJobResponse" name="launchJobResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Requires all the parameters with correct type, and structures representing the input files. The structure contains the name of the input file and either the contents in Base64 encoded binary form or a MIME attachment, or simply a location (URL) to the associated file. The operation returns a Job ID that can be used to retrieve job status and outputs.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="launchJobBlocking" parameterOrder="launchJobBlockingInput">

         <wsdl:input message="impl:launchJobBlockingRequest" name="launchJobBlockingRequest"/>

         <wsdl:output message="impl:launchJobBlockingResponse" name="launchJobBlockingResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Same as launchJob but blocks until the remote execution is complete, and returns job outputs (as described above) as the response. This operation may only be appropriate for jobs that are not long running.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="queryStatus" parameterOrder="queryStatusInput">

         <wsdl:input message="impl:queryStatusRequest" name="queryStatusRequest"/>

         <wsdl:output message="impl:queryStatusResponse" name="queryStatusResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Expects a Job ID to query the status of a running job. A status code, message, and URL of the working directory for the job are returned.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="getJobStatistics" parameterOrder="getJobStatisticsInput">

         <wsdl:input message="impl:getJobStatisticsRequest" name="getJobStatisticsRequest"/>

         <wsdl:output message="impl:getJobStatisticsResponse" name="getJobStatisticsResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Returns basic job statistics including start time, activation time and completion time for a given Job ID.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="getOutputs" parameterOrder="getOutputsInput">

         <wsdl:input message="impl:getOutputsRequest" name="getOutputsRequest"/>

         <wsdl:output message="impl:getOutputsResponse" name="getOutputsResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">returns the outputs from a job that is identified by a Job ID. The output consists of the urls for the standard output and error, and an array of structures representing the output files. The structure contains the name of the output file and the url from where it can be downloaded.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="getOutputAsBase64ByName" parameterOrder="getOutputAsBase64ByNameInput">

         <wsdl:input message="impl:getOutputAsBase64ByNameRequest" name="getOutputAsBase64ByNameRequest"/>

         <wsdl:output message="impl:getOutputAsBase64ByNameResponse" name="getOutputAsBase64ByNameResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Returns the contents of an output file as Base64 binary. The input is a data structure that contains the Job ID for a particular job, and the name of the file to be retrieved.</wsdl:documentation>
</wsdl:operation>

      <wsdl:operation name="destroy" parameterOrder="destroyInput">

         <wsdl:input message="impl:destroyRequest" name="destroyRequest"/>

         <wsdl:output message="impl:destroyResponse" name="destroyResponse"/>

         <wsdl:fault message="impl:FaultType" name="FaultType"/>

      <wsdl:documentation xmlns:opal="http://nbcr.sdsc.edu/opal/types">Destroys a running job identified by a Job ID.</wsdl:documentation>
</wsdl:operation>

   </wsdl:portType>

   <wsdl:binding name="AppServicePortSoapBinding" type="impl:AppServicePortType">

      <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

      <wsdl:operation name="getAppMetadata">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/getAppMetadata"/>

         <wsdl:input name="getAppMetadataRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="getAppMetadataResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="getAppConfig">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/getAppConfig"/>

         <wsdl:input name="getAppConfigRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="getAppConfigResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="launchJob">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/launchJob"/>

         <wsdl:input name="launchJobRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="launchJobResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="launchJobBlocking">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/launchJobBlocking"/>

         <wsdl:input name="launchJobBlockingRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="launchJobBlockingResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="queryStatus">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/queryStatus"/>

         <wsdl:input name="queryStatusRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="queryStatusResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="getJobStatistics">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/getJobStatistics"/>

         <wsdl:input name="getJobStatisticsRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="getJobStatisticsResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="getOutputs">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/getOutputs"/>

         <wsdl:input name="getOutputsRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="getOutputsResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="getOutputAsBase64ByName">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/getOutputAsBase64ByName"/>

         <wsdl:input name="getOutputAsBase64ByNameRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="getOutputAsBase64ByNameResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

      <wsdl:operation name="destroy">

         <wsdlsoap:operation soapAction="http://nbcr.sdsc.edu/opal/destroy"/>

         <wsdl:input name="destroyRequest">

            <wsdlsoap:body use="literal"/>

         </wsdl:input>

         <wsdl:output name="destroyResponse">

            <wsdlsoap:body use="literal"/>

         </wsdl:output>

         <wsdl:fault name="FaultType">

            <wsdlsoap:fault name="FaultType" use="literal"/>

         </wsdl:fault>

      </wsdl:operation>

   </wsdl:binding>

   <wsdl:service name="Blast">

      <wsdl:port binding="impl:AppServicePortSoapBinding" name="AppServicePort">

         <wsdlsoap:address location="http://webservices.genouest.org/opal2/services/Blast"/>

      </wsdl:port>

   </wsdl:service>

</wsdl:definitions>
