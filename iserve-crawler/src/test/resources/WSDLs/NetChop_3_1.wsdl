<?xml version="1.0"?>
<wsdl:definitions 
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
 xmlns:tns="http://www.cbs.dtu.dk/ws/WSNetChop_3_1" 
 xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" 
 xmlns:netchop="http://www.cbs.dtu.dk/ws/ws-netchop" 
 xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" 
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
 xmlns="http://schemas.xmlsoap.org/wsdl/" 
 targetNamespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1">

	<wsdl:types>
		<xsd:schema>
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-common" 
			 schemaLocation="../common/ws_common_1_0.xsd"
			 />
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-netchop" 
			 schemaLocation="ws_netchop_3_1.xsd"
			/>
		</xsd:schema>
	</wsdl:types>

	<wsdl:types>
		<schema targetNamespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"
		 xmlns="http://www.w3.org/2001/XMLSchema"
		 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
		 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xsd:element name="runService" type="netchop:runService"/>
			<xsd:element name="runServiceResponse" type="common:runServiceResponse"/>
			<xsd:element name="fetchResult" type="common:fetchResult"/>
			<xsd:element name="pollQueue" type="common:pollQueue"/>
			<xsd:element name="fetchResultResponse" type="netchop:fetchResultResponse"/>
			<xsd:element name="pollQueueResponse" type="common:pollQueueResponse"/>
		</schema>
	</wsdl:types>

	<!-- ==================================================================== -->

	<message name="runServiceRequest">
		<part name="parameters" element="tns:runService"/>
	</message>
	<message name="runServiceResponse">
		<part name="parameters" element="tns:runServiceResponse"/>
	</message>
	<message name="fetchResultRequest">
		<part name="parameters" element="tns:fetchResult"/>
	</message>
	<message name="fetchResultResponse">
		<part name="parameters" element="tns:fetchResultResponse"/>
	</message>
	<message name="pollQueueRequest">
		<part name="job" element="tns:pollQueue"/>
	</message>
	<message name="pollQueueResponse">
		<part name="queueentry" element="tns:pollQueueResponse"/>
	</message>

	<!-- ==================================================================== -->

	<portType name="WSNetChop_3_1">
		<operation name="runService">
			<input name="runServiceRequest" message="tns:runServiceRequest"/>
			<output name="runServiceResponse" message="tns:runServiceResponse"/>
		</operation>
		<operation name="pollQueue">
			<input name="pollQueueRequest" message="tns:pollQueueRequest"/>
			<output name="pollQueueResponse" message="tns:pollQueueResponse"/>
		</operation>
		<operation name="fetchResult">
			<input name="fetchResultRequest" message="tns:fetchResultRequest"/>
			<output name="fetchResultResponse" message="tns:fetchResultResponse"/>
		</operation>
	</portType>

	<!-- ==================================================================== -->

	<binding name="WSNetChop_3_1" type="tns:WSNetChop_3_1">
		<soapenv:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="pollQueue">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetChop_3_1#pollQueue"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</output>
		</operation>
		<operation name="runService">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetChop_3_1#runService"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</output>
		</operation>
		<operation name="fetchResult">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetChop_3_1#fetchResult"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetChop_3_1"/>
			</output>
		</operation>
	</binding>

	<!-- ==================================================================== -->

	<service name="WSNetChop_3_1">
		<port name="WSNetChop_3_1" binding="tns:WSNetChop_3_1">
			<soapenv:address location="http://ws.cbs.dtu.dk:80/cgi-bin/soap/ws/server.cgi"/>
		</port>

		<documentation>

		INTRODUCTION

		This Web Service implements NetChop v. 3.1. It produces neural network
		predictions for cleavage sites of the human proteasome. The method is
		described in detail in the following article:

		The role of the proteasome in generating cytotoxic T cell epitopes:
		Insights obtained from improved predictions of proteasomal cleavage.
		M Nielsen, C Lundegaard, O Lund, and C Kesmir.
		Immunogenetics., 57(1-2):33-41, 2005.

		Alongside this Web Service the NetChop method is also implemented as
		a traditional click-and-paste WWW server at:
	  
		  http://www.cbs.dtu.dk/services/NetChop/
        
		NetChop is also available as a stand-alone software package to install
		and run at the user's site, with the same functionality. For academic
		users there is a download page at:

		  http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?netchop

		Other users are requested to write to software@cbs.dtu.dk for details.


		WEB SERVICE OPERATION

		This Web Service is fully asynchronous; the usage is split into the
		following three operations:

		1. runService    

		Input:	The following parameters and data:

		        * 'method' - prediction method
	                  0 for "C term 3.0", 1 for "20S 3.0";

		        * 'threshold' - threshold for yes/no decision
		          The default is 0.5; increasing the threshold results in better
		          specificity, but worse sensitivity

		        * 'sequences' - protein sequences, with unique identifiers 
		          The sequences must be written using the one letter amino acid code:
		          `acdefghiklmnpqrstvwy' or `ACDEFGHIKLMNPQRSTVWY'. Other letters
		          will be converted to `X' and treated as unknown amino acids.
		          Other symbols, such as whitespace and numbers, will be ignored.

		Output: Unique job identifier

		2. pollQueue

		Input:	Unique job identifier

		Output: 'jobstatus' - the status of the job
		        Possible values are QUEUED, ACTIVE, FINISHED, WAITING, REJECTED,
		        UNKNOWN JOBID or QUEUE DOWN

		3. fetchResult
  
		Input:	Unique job identifier of a finished job

		Output: 'output' - prediction results
		        For each input residue a record is output consisting of the
		        following fields:

		        seqname        truncated to 10 characters in ver. 3.1a
		        source         "netchop-3.1a" (fixed string)
		        feature        "cleavage" (fixed string)
		        start,end      residue number (given twice)
		        score          prediction score
		        strand,frame   N/A
		        comment        answer ("S" for yes, "." for no)


		CONTACT

		Questions concerning the scientific aspects of the NetChop method should go
		to Morten Nielsen, mniel@cbs.dtu.dk; technical question concerning the Web
		Service should go to Peter Fischer Hallin, pfh@cbs.dtu.dk or Kristoffer
		Rapacki, rapacki@cbs.dtu.dk.
		</documentation>
	</service>

</wsdl:definitions>
