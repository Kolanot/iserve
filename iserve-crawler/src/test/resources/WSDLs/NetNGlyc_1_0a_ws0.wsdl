<?xml version="1.0"?>
<wsdl:definitions 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns:tns="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0" 
xmlns:netNglyc="http://www.cbs.dtu.dk/ws/ws-netNglyc" 
xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" 
xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" 
xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
xmlns="http://schemas.xmlsoap.org/wsdl/" 
targetNamespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0">

	<wsdl:types>
		<xsd:schema>
			<!-- XSD -->
			<xsd:import namespace="http://www.cbs.dtu.dk/ws/ws-netNglyc" schemaLocation="ws_netNglyc_1_0a_ws0.xsd"/>
			<!-- XSD -->
			<xsd:import namespace="http://www.cbs.dtu.dk/ws/ws-common" schemaLocation="../common/ws_common_1_0b.xsd"/>
		</xsd:schema>
		<schema targetNamespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0" 
		xmlns="http://www.w3.org/2001/XMLSchema" 
		xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
		xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xsd:element name="runService" type="netNglyc:runService"/>
			<xsd:element name="runServiceResponse" type="common:runServiceResponse"/>
			<xsd:element name="fetchResult" type="common:fetchResult"/>
			<xsd:element name="fetchResultResponse" type="netNglyc:fetchResultResponse"/>
			<xsd:element name="pollQueue" type="common:pollQueue"/>
			<xsd:element name="pollQueueResponse" type="common:pollQueueResponse"/>
		</schema>
	</wsdl:types>

	<!-- ==================================================================== -->

	<message name="runServiceRequest">
		<part name="parameters" element="tns:runService"/>
	</message>
	<message name="runServiceResponse">
		<part name="parameters" element="tns:runServiceResponse"/>
	</message>
	<message name="fetchResultRequest">
		<part name="parameters" element="tns:fetchResult"/>
	</message>
	<message name="fetchResultResponse">
		<part name="parameters" element="tns:fetchResultResponse"/>
	</message>
	<message name="pollQueueRequest">
		<part name="job" element="tns:pollQueue"/>
	</message>
	<message name="pollQueueResponse">
		<part name="queueentry" element="tns:pollQueueResponse"/>
	</message>

	<!-- ==================================================================== -->

	<portType name="WSNetNGlyc_1_0a_ws0">
		<operation name="runService">
			<input name="runServiceRequest" message="tns:runServiceRequest"/>
			<output name="runServiceResponse" message="tns:runServiceResponse"/>
		</operation>
		<operation name="pollQueue">
			<input name="pollQueueRequest" message="tns:pollQueueRequest"/>
			<output name="pollQueueResponse" message="tns:pollQueueResponse"/>
		</operation>
		<operation name="fetchResult">
			<input name="fetchResultRequest" message="tns:fetchResultRequest"/>
			<output name="fetchResultResponse" message="tns:fetchResultResponse"/>
		</operation>
	</portType>

	<!-- ==================================================================== -->

	<binding name="WSNetNGlyc_1_0a_ws0" type="tns:WSNetNGlyc_1_0a_ws0">
		<soapenv:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="pollQueue">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0#pollQueue"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</output>
		</operation>
		<operation name="runService">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0#runService"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</output>
		</operation>
		<operation name="fetchResult">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0#fetchResult"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WSNetNGlyc_1_0a_ws0"/>
			</output>
		</operation>
	</binding>

	<!-- ==================================================================== -->

	<service name="WSNetNGlyc_1_0a_ws0">
		<documentation>
			INTRODUCTION

			This Web Service implements NetNGlyc 1.0b. It predicts N-Glycosylation
			sites in human proteins using artificial neural networks that examine
			the sequence context of Asn-Xaa-Ser/Thr sequons. The method is described
			in detail in the following article:

			"Prediction of N-glycosylation sites in human proteins".
			R. Gupta, E. Jung and S. Brunak.
			In preparation, 2004.


			Alongside this Web Service the NetNGlyc method is also implemented as
			a traditional interactive WWW server at:

			    http://www.cbs.dtu.dk/services/NetNGlyc

			The traditional server offers more detailed output (graphics), extended
			functionality and comprehensive documentation. It is suitable for close
			investigation of few proteins while this service is recommended for high
			throughput projects.

			NetNglyc is also available as a stand-alone software package to install
			and run at the user's site, with the same functionality. For academic
			users there is a download page at:

			    http://www.cbs.dtu.dk/cgi-bin/nph-sw_request?netNglyc

			Other users are requested to write to software@cbs.dtu.dk for details.


			WEB SERVICE OPERATION

			This Web Service is fully asynchronous; the usage is split into the
			following three operations:

			1. runService    

			   Input:  An object of the type 'sequencedata' (see the complete definition
			           in http://www.cbs.dtu.dk/ws/common/ws_common_1_0a.xsd) holding
			           protein sequences with mandatory unique identifiers. Each
			           'sequence' is a pair of 'id' (identifier) and 'seq' (sequence
			           itself). The sequences must be written in one letter amino acid
			           code: `acdefghiklmnpqrstvwy' or `ACDEFGHIKLMNPQRSTVWY'. Other
			           letters will be converted to `X' and treated as unknown amino
			           acids. Other symbols, such as whitespace and numbers, will be
			           ignored. 

			   Output: Unique job identifier

			2. pollQueue

			   Input:  Unique job identifier

			   Output: 'jobstatus' - the status of the job
			           Possible values are QUEUED, ACTIVE, FINISHED, WAITING,
			           REJECTED, UNKNOWN JOBID or QUEUE DOWN

			3. fetchResult

			   Input:  Unique job identifier of a FINISHED job

			   Output: An object of the type 'anndata' (see the complete definition
			           in http://www.cbs.dtu.dk/ws/common/ws_common_1_0b.xsd) holding
			           the predition results. 'annsource' states the 'method' (in
			           this case always 'netNglyc') and 'version' (in this case 3.1b).
			           The objects of the type 'annrecord' hold the predictions for
			           a given residue in a given sequence, the fields are:

			           feature       - always "N-glyc";
			           pos           - sequence residue;
			           score         - 'potential': N-glycosylation potential;
			           score         - 'jury': jury agreement (see below);
			           comment       - prediction result (see below).

			           The two scores above should be interpreted as follows:

			           Any potential crossing the default threshold of 0.5, represents
			           a predicted glycosylated site. The 'potential' score is the averaged
			           output of nine neural networks. For further information, the 'jury'
			           agreement column indicates how many of the nine networks support
			           the prediction. The final result is shown in the comment field; the
			           following values are possible:

			           for glycosylated sites:

			           +      potential&gt;0.5
			           ++     potential&gt;0.5 AND jury agreement (9/9)  OR potential&gt;0.75
			           +++    potential&gt;0.75 AND jury agreement
			           ++++   potential&gt;0.90 AND jury agreement

			           and non-glycosylated sites:

			           -      potential&lt;0.5
			           --     potential&lt;0.5 AND jury agreement (all nine &lt;0.5)
			           ---    potential&lt;0.32 AND jury agreement

			           See http://www.cbs.dtu.dk/services/NetNGlyc/output.php for detailed
                 discussion of the prediction results. Please note that this Web
			           Service only predicts on asparagines in Asn-Pro-Ser/Thr sequons;
                 the interactive service mentioned above can be asked to predict on
			           all the asparagines in the input.


			CONTACT

			Questions concerning the scientific aspects of the NetPhos method should
			go to Ramneek Gupta, ramneek@cbs.dtu.dk; technical questions concerning
			the Web Service should go to Peter Fischer Hallin, pfh@cbs.dtu.dk or
			Kristoffer Rapacki, rapacki@cbs.dtu.dk.
		</documentation>
		<port name="WSNetNGlyc_1_0a_ws0" binding="tns:WSNetNGlyc_1_0a_ws0">
			<soapenv:address location="http://ws.cbs.dtu.dk:80/cgi-bin/soap/ws/quasi-1.2.cgi"/>
		</port>
	</service>
</wsdl:definitions>
