<?xml version="1.0"?>
<wsdl:definitions 
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
 xmlns:tns="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0" 
 xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" 
 xmlns:rnammer="http://www.cbs.dtu.dk/ws/ws-rnammer" 
 xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" 
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
 xmlns="http://schemas.xmlsoap.org/wsdl/" 
 targetNamespace="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0">
	<wsdl:types>
		<xsd:schema>
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-common" 
			 schemaLocation="http://www.cbs.dtu.dk/ws/common/ws_common_1_0.xsd"
			 />
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-rnammer" 
			 schemaLocation="http://www.cbs.dtu.dk/ws/RNAmmer/ws_rnammer_1_2_ws0.xsd"
			/>
		</xsd:schema>
		<schema targetNamespace="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0" 
		 xmlns="http://www.w3.org/2001/XMLSchema" 
		 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
		 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xsd:element name="runService" type="rnammer:runService"/>
			<xsd:element name="runServiceResponse" type="common:runServiceResponse"/>
			<xsd:element name="fetchResult" type="common:fetchResult"/>
			<xsd:element name="fetchResultResponse" type="rnammer:fetchResultResponse"/>
			<xsd:element name="pollQueue" type="common:pollQueue"/>
			<xsd:element name="pollQueueResponse" type="common:pollQueueResponse"/>
		</schema>
	</wsdl:types>

	<!-- ==================================================================== -->

	<message name="runServiceRequest">
		<part name="parameters" element="tns:runService"/>
	</message>
	<message name="runServiceResponse">
		<part name="parameters" element="tns:runServiceResponse"/>
	</message>
	<message name="fetchResultRequest">
		<part name="parameters" element="tns:fetchResult"/>
	</message>
	<message name="fetchResultResponse">
		<part name="parameters" element="tns:fetchResultResponse"/>
	</message>
	<message name="pollQueueRequest">
		<part name="job" element="tns:pollQueue"/>
	</message>
	<message name="pollQueueResponse">
		<part name="queueentry" element="tns:pollQueueResponse"/>
	</message>

	<!-- ==================================================================== -->

	<portType name="WSRNAmmer_1_2_ws0">
		<operation name="runService">
			<input name="runServiceRequest" message="tns:runServiceRequest"/>
			<output name="runServiceResponse" message="tns:runServiceResponse"/>
		</operation>
		<operation name="pollQueue">
			<input name="pollQueueRequest" message="tns:pollQueueRequest"/>
			<output name="pollQueueResponse" message="tns:pollQueueResponse"/>
		</operation>
		<operation name="fetchResult">
			<input name="fetchResultRequest" message="tns:fetchResultRequest"/>
			<output name="fetchResultResponse" message="tns:fetchResultResponse"/>
		</operation>
	</portType>
	<binding name="WSRNAmmer_1_2" type="tns:WSRNAmmer_1_2_ws0">
		<soapenv:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="pollQueue">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0#pollQueue"/>
			<input>
				<soapenv:body use="literal"/>
			</input>
			<output>
				<soapenv:body use="literal"/>
			</output>
		</operation>
		<operation name="runService">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0#runService"/>
			<input>
				<soapenv:body use="literal"/>
			</input>
			<output>
				<soapenv:body use="literal"/>
			</output>
		</operation>
		<operation name="fetchResult">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WSRNAmmer_1_2_ws0#fetchResult"/>
			<input>
				<soapenv:body use="literal"/>
			</input>
			<output>
				<soapenv:body use="literal"/>
			</output>
		</operation>
	</binding>
	<service name="WSRNAmmer_1_2_ws0">
	<documentation> 
	This Web Service predicts location of ribosomal RNA genes in full genome sequences
	by using Hidden Markov Models based on alignments from a highly cureated dataset of 
	structurally aligned sequnces.
	
	The input is one or more genomic sequence(s) as either one or more contigs. Each contig
	is submitted as one continous string of DNA together with the sequences identifier.
	
	The kingdom (either Bacteria, Archaea, or Eukaryotes) is specified once for each job 
	that is submitted, using the abbriviations 'bac', 'arc', and 'euk'.

  More information about the method can be found at:
  
     http://www.cbs.dtu.dk/services/RNAmmer/

	This service is fully asynchronous;  the usage is split into the following
	three operations, which is usually executed in this order.
	
	Procedures and messages used are either common and shared among all the CBS
	Web Services, or distinct to each individual Web Service. Marked [distinct] and
	[common] respectively.

	1. runService [distinct/common]
		Submit the input parapeter(s) and sequence data and returns a job identifier

		Input: [distinct]
					* 'mol' -Molecule (e.g. ssu,lsu,tsu)
					* 'kingdom' - The kingdom of the genomic sequence
					  3 kingdoms are available: bac, euk, arc. This is specified
					  only once for the sequences in the current job.
					* 'sequences' - An array of sequence objects, containing the following elements:
					 *  'ident' - The identifier of the sequence
					 *  'seq' - The sequence specified as one continous string
		Output: [common]
					* 'jobid' - The 32 byte identification string of the job
					* 'datetime' - The last timepoint at which the status of the job has changed
					* 'status' - Possible values are QUEUED, ACTIVE, FINISHED, WAITING, REJECTED, 
					  UNKNOWN JOBID or QUEUE DOWN
		
	2. pollQueue [common]
	Once obtained from 'runService', a job identification can be used to poll the
	status to see if the result is ready for download.

		Input:   [common]
					* 'jobid' - The 32 byte identification string of the job
		Output:  [common]
					* 'jobid' - The 32 byte identification string of the job
					* 'datetime' - The last timepoint at which the status of the job has changed
					* 'status' - Possible values are QUEUED, ACTIVE, FINISHED, WAITING, REJECTED, 
					  UNKNOWN JOBID or QUEUE DOWN

	3. fetchResult  [distinct/common]
	Once the status is 'FINISHED' the results generated by the Web Service can be retrieved by
	specifying the jobid;
	
		Input:   [common]
					* 'jobid' - The 32 byte identification string of the job
		Output:  [distinct]
					*  'predictionTitle' - Short description of the generated output
					*  'predictor' - Name and version of the program which generated the output
					*  'predictionDate' - Date at the time the when the prediction finished
					*  'entries' - A collection of gene predictions containing the following information:
					 *    'mol' - Molecule type (5/8s, 16/18s, or 23/28s rRNA) 
					 *    'feature' - feature type (rRNA)
					 *    'start' - Start position of the gene (integer)
					 *    'stop' - stop position of the gene (integer)
					 *    'direction' - strand of the gene (+/-)
					 *    'score' - The HMM alignment score (floating point number)
					 *    'evalue' - The E-value of the HMM alignment  (floating point number)
					 *    'sequenceEntry' - The sequence identifier ( as specified when sequence 
					       was uploaded )
					 *    'sequence' - The gene sequence extracted from the genomic contig
					 *    'model_string' - The consensus of the Hidden Markov Model (output from hmmsearch)
					 *    'match_string' - The match of the query to the model (output from hmmsearch)
					 *    'query_string' - The query sequence (output from hmmsearch)
					
		For more information, please contact Peter F. Hallin: pfh@cbs.dtu.dk

		The method is described in the following paper:
		RNAmmer: consistent and rapid annotation of ribosomal RNA genes (2007) Karin Lagesen, Peter Fischer Hallin, 
		and David W. Ussery
	  </documentation>
		<port name="WSRNAmmer_1_2_ws0" binding="tns:WSRNAmmer_1_2">
      <soapenv:address location="http://ws.cbs.dtu.dk:80/cgi-bin/soap/ws/quasi.cgi"/>
	  </port>
  </service>
</wsdl:definitions>
