<?xml version="1.0" encoding="UTF-8"?>
<definitions name="DOMAINATION_Domain_Prediction"
	targetNamespace="Domaination"
	xmlns:tns="Domaination"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema">
 

	<types>
		<xsd:schema targetNamespace="Domaination">
 		
			<!-- ***** ***** ***** types for literal/wrapped style ***** ***** ***** -->
			<xsd:complexType name="ticketType">
				<xsd:sequence>
					<xsd:element name="ticket" type="xsd:string" maxOccurs="1" />
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:complexType name="FastaType">
				<xsd:sequence>
					<xsd:element name="FASTA" type="xsd:string" maxOccurs="1" />
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:complexType name="ProtIdType">
				<xsd:sequence>
					<xsd:element name="UniProt_RefSeq_ID" type="xsd:string" maxOccurs="1" />
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:complexType name="responseType">
   				<xsd:sequence>
					<xsd:element name="response" type="xsd:string" maxOccurs="1" />
   				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:complexType name="resultsResponseType">
   				<xsd:sequence>
				    <xsd:element name="result_url" type="xsd:string"/>
				    <xsd:element name="ticket" type="xsd:string"/>
				    <xsd:element name="versions" type="tns:versionsType"/>
				    <xsd:element name="iterations" type="tns:iterationsType"/>
   				</xsd:sequence>
			</xsd:complexType>
            
			<xsd:complexType name="resultsResponseTypeWrapper">
            	<xsd:sequence>
                    <xsd:element name="resultsResponse" type="tns:resultsResponseType"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="statusResponseType">
				<xsd:sequence>
					<xsd:element name="status" type="tns:statusType"/>
				</xsd:sequence>
			</xsd:complexType>
            
			<!-- definition of the status return type -->
            <xsd:complexType name="statusType">
                <xsd:annotation>
                    <xsd:documentation>
                        Successfull completion: completed == true AND status == 1
                        In case no valid input is provided a ticket with value "0" was returned.
                        All status and statusString values:
                         1, "Completed";
                         0, "Queued/Running";
                        -1, "Crashed";
                        -2, "Ticket not found";
                        -3, "Submission problems: either no valid Protein ID or FASTA record".
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <!-- the boolean flag 'completed' states whether the task is still running or has already finished -->
                    <xsd:element name="completed" type="xsd:boolean" default="false" />
                    <!-- once the job is completed, the 'status' will give a information code about success, error, failure, ... -->
                    <xsd:element name="statusCode" type="xsd:int" default="0" />
                    <xsd:element name="statusString" type="xsd:string" />
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="versionsType">
                <xsd:sequence>
                    <xsd:element name="domaination" type="xsd:string"/>
                    <xsd:element name="db" type="tns:db"/>
                </xsd:sequence>
            </xsd:complexType>

            <!--<xsd:complexType name="dbname">-->
                <!--<xsd:simpleContent>-->
                    <!--<xsd:extension base="xsd:string">-->
                        <!--<xsd:attribute name="date" type="xsd:date" use="required"/>-->
                        <!--<xsd:attribute name="version" type="xsd:string" use="optional"/>-->
                    <!--</xsd:extension>-->
                <!--</xsd:simpleContent>-->
            <!--</xsd:complexType>-->

            <xsd:complexType name="db">
                <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                        <xsd:attribute name="date" type="xsd:date" use="required"/>
                        <xsd:attribute name="version" type="xsd:string" use="optional"/>
                    </xsd:extension>
				</xsd:simpleContent>
            </xsd:complexType>

            <xsd:complexType name="iterationsType">
				<xsd:sequence>
                    <xsd:element name="iteration" type="tns:iterationType" minOccurs="2" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
			
            <xsd:complexType name="iterationType">
                <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                        <xsd:attribute name="num" type="xsd:int" use="required"/>
                    </xsd:extension>
                </xsd:simpleContent>
            </xsd:complexType>


            <!-- ***** ***** ***** elements for service method input ***** ***** ***** -->
			<xsd:element name="getTicketById" type="tns:ProtIdType" />
			<xsd:element name="getTicketBySeq" type="tns:FastaType" />
			<xsd:element name="getResults" type="tns:ticketType" />
			<xsd:element name="getStatus" type="tns:ticketType"/>
           
			<!-- ***** ***** ***** elements for service method output ***** ***** ***** -->
			<xsd:element name="getTicketByIdResponse" type="tns:ticketType"/>
			<xsd:element name="getTicketBySeqResponse" type="tns:ticketType"/>
			<xsd:element name="getResultsResponse" type="tns:resultsResponseTypeWrapper"/>
			<xsd:element name="getStatusResponse" type="tns:statusResponseType"/>
			
			<xsd:element name="response" type="xsd:string" />	
				
		</xsd:schema>
		
	</types>


    <!-- ***** ***** ***** input messages ***** ***** ***** -->
	<message name="getTicketByIdMsg">
		<part name="UniProt_RefSeq_ID" element="tns:getTicketById"/>
	</message>	
	<message name="getTicketBySeqMsg">
		<part name="FASTA" element="tns:getTicketBySeq"/>
	</message>	
	<message name="getResultsMsg">
		<part name="Ticket" element="tns:getResults"/>
	</message>	
	<message name="getStatusMsg">
		<part name="Ticket" element="tns:getStatus"/>
	</message>
	

	<!-- ***** ***** ***** output messages ***** ***** ***** -->
	<message name="Response">
		<part name="Response" element="tns:response"/>
	</message>
	
	<message name="getTicketByIdMsgResponse">
		<part name="UniProt_ID" element="tns:getTicketByIdResponse"/>
	</message>	
	<message name="getTicketBySeqMsgResponse">
		<part name="FASTA" element="tns:getTicketBySeqResponse"/>
	</message>	
	<message name="getResultsMsgResponse">
		<part name="Ticket" element="tns:getResultsResponse"/>
	</message>
	<message name="statusMsgResponse">
        <part name="Status" element="tns:getStatusResponse"/>
    </message>


    <!-- ***** ***** ***** Interface (portType) with methods (operations) ***** ***** ***** -->
	<portType name="IBIVU_PortType">
		<operation name="getTicketById">
			<input message="tns:getTicketByIdMsg"/>
			<output message="tns:getTicketByIdMsgResponse"/>
		</operation>		
		<operation name="getTicketBySeq">
			<input message="tns:getTicketBySeqMsg"/>
			<output message="tns:getTicketBySeqMsgResponse"/>
		</operation>		
		<operation name="getResults">
			<input message="tns:getResultsMsg"/>
			<output message="tns:getResultsMsgResponse"/>
		</operation>		
		<operation name="getStatus">
			<input message="tns:getStatusMsg"/>
			<output message="tns:statusMsgResponse"/>
		</operation> 
	</portType>


	<!-- ***** ***** ***** binding ***** ***** ***** -->
	<binding name="IBIVU_Binding" type="tns:IBIVU_PortType">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>   		
		<operation name="getTicketById">
			<soap:operation soapAction="Domaination#getTicketById"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
		</operation>		
		<operation name="getTicketBySeq">
			<soap:operation soapAction="Domaination#getTicketBySeq"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
		</operation>		
		<operation name="getResults">
			<soap:operation soapAction="Domaination#getResults"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
		</operation>		
		<operation name="getStatus">
			<soap:operation soapAction="Domaination#getStatus"/>
			<input>
				<soap:body use="literal"/>
			</input>
			<output>
				<soap:body use="literal"/>
			</output>
		</operation>
	</binding>
 
 
	<service name="DOMAINATION_Domain_Prediction">
		<documentation>WSDL File for DOMAINATION Domain Prediction.
			A DOMAINATION run can take 15 to over 90 minutes.
			The ticket returned should be used in the getResults method.
			In addition, results can be viewed via the web using this URL:
			http://www.ibi.vu.nl/programs/domainationwww/?id=ticket
			getResults returns 0 until results are ready.
			Discontinuous domains are indicated using hyphens.
			See http://www.ibi.vu.nl/programs/domainationwww/ for more info.
			The ticket number returned by getTicketBy* and getResults can also be used 
			for the web server: http://www.ibi.vu.nl/programs/domainationwww/?id='ticketnumber'
		</documentation>
		<port binding="tns:IBIVU_Binding" name="IBIVU_Port">
			<soap:address location="http://zeus.few.vu.nl/cgi-bin/domaination_srv_ebi.pl"/>
		</port>
	</service>
	
</definitions>
