<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions
	name="fastm"
	targetNamespace="http://soap.jdispatcher.ebi.ac.uk"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:tns="http://soap.jdispatcher.ebi.ac.uk"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<wsdl:documentation>FASTM --- compare peptides to a protein sequence database.</wsdl:documentation>
	<wsdl:types>
		<xsd:schema xmlns="http://soap.jdispatcher.ebi.ac.uk"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			attributeFormDefault="unqualified" elementFormDefault="unqualified"
			targetNamespace="http://soap.jdispatcher.ebi.ac.uk">

			<xsd:complexType name="InputParameters">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Input parameters for the tool</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="1"
						maxOccurs="1" name="program"
						nillable="false" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Program [The FASTA program to be used for the Sequence Similarity Search]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="1"
						maxOccurs="1" name="stype"
						nillable="false" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Sequence type [Indicates if the query sequence is protein, DNA or RNA. Used to force FASTA to interpret the input sequence as specified type of sequence (via. the &apos;-p&apos;, &apos;-n&apos; or &apos;-U&apos; options), this prevents issues when using nucleotide sequences that contain many ambiguous residues.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="matrix"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Matrix [The comparison matrix to be used to score alignments when searching the database]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="match_scores"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Match/mismatch scores [ Specify match/mismatch scores for DNA comparisons.  The default is &quot;+5/-4&quot;. &quot;+3/-2&quot; can perform better in some cases.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="gapopen"
						nillable="true" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Gap open [Score for the first residue in a gap.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="gapext"
						nillable="true" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Gap extend [Score for each additional residue in a gap.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="hsps"
						nillable="true" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Display of multiple high-scoring alignments (HSPs) [Turn on/off the display of all significant alignments between query and library sequence.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="expupperlim"
						nillable="true" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Expectation upper limit [Limits the number of scores and alignments reported based on the expectation value. This is the maximum number of times the match is expected to occur by chance.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="explowlim"
						nillable="true" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Expectation lower limit [Limit the number of scores and alignments reported based on the expectation value. This is the minimum number of times the match is expected to occur by chance. This allows closely related matches to be excluded from the result in favor of more distant relationships.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="strand"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Nucleotide strand [For nucleotide sequences specify the sequence strand to be used for the search. By default both upper (provided) and lower (reverse complement of provided) strands are used, for single stranded sequences searching with only the upper or lower strand may provide better results.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="hist"
						nillable="true" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Histogram [Turn on/off the histogram in the FASTA result. The histogram gives a qualitative view of how well the statistical theory fits the similarity scores calculated by the program.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="scores"
						nillable="true" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Scores [Maximum number of match score summaries reported in the result output.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="alignments"
						nillable="true" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Alignments [Maximum number of match alignments reported in the result output.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="scoreformat"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Score report format [Different score report formats.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="stats"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Statistical estimates [The statistical routines assume that the library contains a large sample of unrelated sequences. Options to select what method to use include regression,  maximum likelihood estimates, shuffles, or combinations of these.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="seqrange"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Sequence range [Specify a range or section of the input sequence to use in the search. Example: Specifying &apos;34-89&apos; in an input sequence of total length 100, will tell FASTA to only use residues 34 to 89, inclusive.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="dbrange"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Database range [Specify the sizes of the sequences in a database to search against. For example: 100-250 will search all sequences in a database with length between 100 and 250 residues, inclusive.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="filter"
						nillable="true" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Filter [Filter regions of low sequence complexity. This can avoid issues with low complexity sequences where matches are found due to composition rather then meaningful sequence similarity. However in some cases filtering also masks regions of interest and so should be used with caution.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="sequence"
						nillable="false" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Sequence [A free text (raw) sequence is simply a block of characters representing a DNA/RNA or Protein sequence. The sequence can be in GCG, FASTA, EMBL, GenBank, PIR, NBRF, Phylip or UniProtKB/Swiss-Prot format. Partially formatted sequences are not accepted. Adding a return to the end of the sequence may help certain applications understand the input. Note that directly using data from word processors may yield unpredictable results as hidden/control characters may be present.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="1"
						maxOccurs="1" name="database"
						nillable="false" type="ArrayOfString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Database [The databases to run the sequence similarity search against. Multiple databases can be used at the same time]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0"
						maxOccurs="1" name="ktup"
						nillable="true" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">KTUP [FASTA uses a rapid word-based lookup strategy to speed the initial phase of the similarity search. The KTUP is used to control the sensitivity of the search. Lower values lead to more sensitive, but slower searches.]</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="ArrayOfString">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsResultTypes">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List of renderers available to output the result of the job</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="type" type="wsResultType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsResultType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Details about a renderer used to output the result of the job</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" nillable="true" name="description" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A short description of the renderer</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" nillable="false" name="fileSuffix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A suggested file suffix to be used when saving the data formatted by the renderer</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" nillable="false" name="identifier" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The renderer identifier to be used when invoking the getResult() method</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" nillable="true" name="label" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A more appropriate name for the renderer (more meaningful than the identifier)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" nillable="false" name="mediaType" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The media type (MIME) of the renderer's output</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsRawOutputParameters">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A set of parameters passed to a renderer when formatting the data</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="1" name="parameter" type="wsRawOutputParameter" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsRawOutputParameter">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A parameter used by the renderer</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="name" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The name of the parameter</xsd:documentation>
						</xsd:annotation>
					</xsd:element>					
					<xsd:element maxOccurs="1" minOccurs="1" name="value" type="ArrayOfString">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The parameter value as an array of String</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsParameters">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">List the names of the tool parameters</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="id" type="xsd:string" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsParameterDetails">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Details about a tool parameter</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="0" name="name" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The name of the parameter</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="description" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A short description of the parameter</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The type of the parameter</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="values" type="tns:wsParameterValues">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The list of values available for this parameter</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsParameterValues">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The list of parameter values</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="value" type="tns:wsParameterValue" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsParameterValue">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The details about a parameter values</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="0" maxOccurs="1" name="label" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A meaningful label for the parameter value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="1" maxOccurs="1" name="value" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">The real value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="defaultValue" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A flag indicating whether this value is a default value or not</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1" name="properties" type="tns:wsProperties">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">A set of additional properties associated with the parameter value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsProperties">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A set of properties</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="property" type="tns:wsProperty" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="wsProperty">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">A key/value pair association of information</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="1" maxOccurs="1" name="key" type="xsd:string" />
					<xsd:element minOccurs="1" maxOccurs="1" name="value" type="xsd:string" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="run">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="email" nillable="false" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">User email address</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0"
							name="title" nillable="true" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">A title to identify the analysis job</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="parameters" nillable="false" type="InputParameters">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The list of parameters to be used for launching the analysis</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="runResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="jobId" nillable="false"
							type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">A unique identifier for the analysis job</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getStatus">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="jobId" nillable="false" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">An identifier for the job to check</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getStatusResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="status" nillable="false"
							type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The status of the job (FINISHED, ERROR, RUNNING, NOT_FOUND or FAILURE)</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getResultTypes">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="jobId" nillable="false" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">An identifier for the job to check</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getResultTypesResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="resultTypes"
							type="wsResultTypes">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The list of renderers available</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getResult">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="jobId" nillable="false" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">An identifier for the job to check</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="type" nillable="false" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The renderer to be used to format the output</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0"
							name="parameters" nillable="true" type="wsRawOutputParameters">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">A list of parameters to be passed on to the renderer</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getResultResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="output" nillable="true"
							type="xsd:base64Binary">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">Base64 encoded data corresponding to the output of the job formatted by the renderer</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getParameterDetails">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="parameterId" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The identifier for the parameter</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getParameterDetailsResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element minOccurs="0" name="parameterDetails" type="tns:wsParameterDetails">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The parameter details</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getParameters">
				<xsd:complexType />
			</xsd:element>
			<xsd:element name="getParametersResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element minOccurs="1" maxOccurs="1" name="parameters" type="tns:wsParameters">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">The list of parameter available for this tool</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
	</wsdl:types>


	<wsdl:message name="runResponse">
		<wsdl:part name="parameters" element="tns:runResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="runRequest">
		<wsdl:part name="parameters" element="tns:run"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getStatusResponse">
		<wsdl:part name="parameters" element="tns:getStatusResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getStatusRequest">
		<wsdl:part name="parameters" element="tns:getStatus"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getResultTypesResponse">
		<wsdl:part name="parameters" element="tns:getResultTypesResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getResultTypesRequest">
		<wsdl:part name="parameters" element="tns:getResultTypes"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getResultResponse">
		<wsdl:part name="parameters" element="tns:getResultResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getResultRequest">
		<wsdl:part name="parameters" element="tns:getResult"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getParameterDetailsResponse">
		<wsdl:part element="tns:getParameterDetailsResponse" name="parameters"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getParameterDetailsRequest">
		<wsdl:part element="tns:getParameterDetails" name="parameters"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getParametersResponse">
		<wsdl:part element="tns:getParametersResponse" name="parameters"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="getParametersRequest">
		<wsdl:part element="tns:getParameters" name="parameters"></wsdl:part>
	</wsdl:message>

	<wsdl:portType name="JDispatcherService">
		<wsdl:operation name="run">
			<wsdl:documentation>Submit an analysis job</wsdl:documentation>
			<wsdl:input name="runRequest" message="tns:runRequest"></wsdl:input>
			<wsdl:output name="runResponse" message="tns:runResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getStatus">
			<wsdl:documentation>Get the status of a submitted job</wsdl:documentation>
			<wsdl:input name="getStatusRequest" message="tns:getStatusRequest"></wsdl:input>
			<wsdl:output name="getStatusResponse" message="tns:getStatusResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getResultTypes">
			<wsdl:documentation>Get the list of renderers available to output a job result (i.e. the list of available output types)</wsdl:documentation>
			<wsdl:input name="getResultTypesRequest" message="tns:getResultTypesRequest"></wsdl:input>
			<wsdl:output name="getResultTypesResponse" message="tns:getResultTypesResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getResult">
			<wsdl:documentation>Get a job result formatted using a particular renderer</wsdl:documentation>
			<wsdl:input name="getResultRequest" message="tns:getResultRequest"></wsdl:input>
			<wsdl:output name="getResultResponse" message="tns:getResultResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getParameters">
			<wsdl:documentation>List the names of the parameters available before submission</wsdl:documentation>
			<wsdl:input message="tns:getParametersRequest" name="getParametersRequest"></wsdl:input>
			<wsdl:output message="tns:getParametersResponse" name="getParametersResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getParameterDetails">
			<wsdl:documentation>Get some details about a parameter (e.g. name, description, values, etc.)</wsdl:documentation>
			<wsdl:input message="tns:getParameterDetailsRequest" name="getParameterDetailsRequest"></wsdl:input>
			<wsdl:output message="tns:getParameterDetailsResponse" name="getParameterDetailsResponse"></wsdl:output>
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:binding name="JDispatcherServiceHttpBinding"
		type="tns:JDispatcherService">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="run">
			<wsdl:documentation>Submit an analysis job</wsdl:documentation>
			<soap:operation soapAction="urn:Run" />
			<wsdl:input name="runRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="runResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getStatus">
			<wsdl:documentation>Get the status of a submitted job</wsdl:documentation>
			<soap:operation soapAction="urn:GetStatus" />
			<wsdl:input name="getStatusRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="getStatusResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getResultTypes">
			<wsdl:documentation>Get the list of renderers available to output a job result (i.e. the list of available output types)</wsdl:documentation>
			<soap:operation soapAction="urn:GetResultTypes" />
			<wsdl:input name="getResultTypesRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="getResultTypesResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getResult">
			<wsdl:documentation>Get a job result formatted using a particular renderer</wsdl:documentation>
			<soap:operation soapAction="urn:GetResult" />
			<wsdl:input name="getResultRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="getResultResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getParameters">
			<wsdl:documentation>List the names of the parameters available before submission</wsdl:documentation>
			<soap:operation soapAction="urn:GetParameters" />
			<wsdl:input name="getParametersRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="getParametersResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getParameterDetails">
			<wsdl:documentation>Get some details about a parameter (e.g. name, description, values, etc.)</wsdl:documentation>
			<soap:operation soapAction="urn:GetParameterDetails" />
			<wsdl:input name="getParameterDetailsRequest">
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output name="getParameterDetailsResponse">
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>

	<wsdl:service name="JDispatcherService">
		<wsdl:port name="JDispatcherServiceHttpPort"
			binding="tns:JDispatcherServiceHttpBinding">
			<soap:address
				location="http://www.ebi.ac.uk/Tools/services/soap/fastm" />
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>