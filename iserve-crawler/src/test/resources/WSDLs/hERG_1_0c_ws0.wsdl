<?xml version="1.0"?>
<wsdl:definitions 
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
 xmlns:tns="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0" 
 xmlns:common="http://www.cbs.dtu.dk/ws/ws-common" 
 xmlns:herg="http://www.cbs.dtu.dk/ws/ws-herg" 
 xmlns:soapenv="http://schemas.xmlsoap.org/wsdl/soap/" 
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
 xmlns="http://schemas.xmlsoap.org/wsdl/" 
 targetNamespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0">
	<wsdl:types>
		<xsd:schema>
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-common" 
			 schemaLocation="../common/ws_common_1_0c.xsd"
			 />
			<!-- XSD -->
			<xsd:import 
			 namespace="http://www.cbs.dtu.dk/ws/ws-herg" 
			 schemaLocation="ws_herg_1_0c_ws0.xsd"
			/>
		</xsd:schema>
<!--
	</wsdl:types>
*** multiple wsdl:types not allowed!
	<wsdl:types>
-->
		<schema targetNamespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0" 
		 xmlns="http://www.w3.org/2001/XMLSchema" 
		 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
		 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xsd:element name="runService" type="herg:runService"/>
			<xsd:element name="runServiceResponse" type="common:runServiceResponse"/>
			<xsd:element name="fetchResult" type="common:fetchResult"/>
			<xsd:element name="fetchResultResponse" type="herg:fetchResultResponse"/>
			<xsd:element name="pollQueue" type="common:pollQueue"/>
			<xsd:element name="pollQueueResponse" type="common:pollQueueResponse"/>
		</schema>
	</wsdl:types>

	<!-- ==================================================================== -->

	<message name="runServiceRequest">
		<part name="parameters" element="tns:runService"/>
	</message>
	<message name="runServiceResponse">
		<part name="parameters" element="tns:runServiceResponse"/>
	</message>

	<message name="fetchResultRequest">
		<part name="parameters" element="tns:fetchResult"/>
	</message>
	<message name="fetchResultResponse">
		<part name="parameters" element="tns:fetchResultResponse"/>
	</message>

	<message name="pollQueueRequest">
		<part name="job" element="tns:pollQueue"/>
	</message>
	<message name="pollQueueResponse">
		<part name="queueentry" element="tns:pollQueueResponse"/>
	</message>

	<!-- ==================================================================== -->

	<portType name="WShERG_1_0c_ws0">
		<operation name="runService">
			<input name="runServiceRequest" message="tns:runServiceRequest"/>
			<output name="runServiceResponse" message="tns:runServiceResponse"/>
		</operation>
		<operation name="pollQueue">
			<input name="pollQueueRequest" message="tns:pollQueueRequest"/>
			<output name="pollQueueResponse" message="tns:pollQueueResponse"/>
		</operation>
		<operation name="fetchResult">
			<input name="fetchResultRequest" message="tns:fetchResultRequest"/>
			<output name="fetchResultResponse" message="tns:fetchResultResponse"/>
		</operation>
	</portType>

	<!-- ==================================================================== -->

	<binding name="WShERG_1_0c_ws0" type="tns:WShERG_1_0c_ws0">
		<soapenv:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="pollQueue">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0#pollQueue"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</output>
		</operation>
		<operation name="runService">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0#runService"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</output>
		</operation>
		<operation name="fetchResult">
			<soapenv:operation soapAction="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0#fetchResult"/>
			<input>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</input>
			<output>
				<soapenv:body use="literal" namespace="http://www.cbs.dtu.dk/ws/WShERG_1_0c_ws0"/>
			</output>
		</operation>
	</binding>

	<!-- ==================================================================== -->

	<service name="WShERG_1_0c_ws0">
		<documentation>
			INTRODUCTION

			This Web Service implements hERG 1.0. It predicts cardiotoxicity of drug
			molecules. The method is described in detail in the following article:

			hERG Classification Model Based on a Combination of Support Vector Machine
			Method and GRIND Descriptors.
			Li Q, Joergensen FS, Oprea T, Brunak S, Taboureau O.
			Mol Pharm: 4;5:117-127, 2008.

			Alongside this Web Service the hERG method is also implemented as
			a traditional paste-and-click WWW server at:

			    http://www.cbs.dtu.dk/services/hERG-1.0/

			The traditional server offers extended functionality and comprehensive
			documentation. It is suitable for close investigation of few molecules;
			this service is recommended for high throughput projects.

			TECHNICAL NOTE

			The main output data type 'anndata' is reused from biological sequence
			analysis where it normally contains protein or nucleotide sequences annotations.
			This Web Service, however, is about molecules, not sequences. Therefore,
			the names of the tags e.g. 'sequence' might seem misleading. We have
			chosen to reuse some data types anyway as they have proved very versatile.

			WEB SERVICE OPERATION

			This Web Service is fully asynchronous; the usage is split into the
			following three operations:

			1. runService    

			   Input:  The following parameters and data:

			           * sort             sort the output by predicted cardiotoxicity
			                              (no value, just presence/absence);
																		
			           * moleculedata     mulitple elements of type 'molecule':
			             * molecule         answers to one molecule:
			               * id               unique identifier for the molecule
			               * comment          optional comment (ignored by this service)
			               * smiles           molecule description string in SMI format

			   Output: Unique job identifier

			2. pollQueue

			   Input:  Unique job identifier

			   Output: 'jobstatus' - the status of the job
			           Possible values are QUEUED, ACTIVE, FINISHED, WAITING,
			           REJECTED, UNKNOWN JOBID or QUEUE DOWN

			3. fetchResult

			   Input:  Unique job identifier of a FINISHED job

			   Output: * 'annsource'
			               'method'              name of the method, here always 'hERG';
			               'version'             version of the method: here always 1.0c;

			             'ann'                   annotations - one element per input molecule
			               'sequence'              standard sequence object (reused for molecules)
			                 'id'                  molecule identifier
			               'annrecords/annrecord'
			                 'feature'             feature name, here always 'hERG';
			                 'global'              always present, indicates the whole molecule 
			                 'score'
			                   'key'                 here always: main
			                   'value'               score value
			                 'comment'             answer: high, low or '-'
			CONTACT

			Questions concerning the scientific aspects of the hERG method should
			go to Olivier Taboureau, otab@cbs.dtu.dk; technical questions concerning
			the Web Service should go to Edita Bartaseviciute, edita@cbs.dtu.dk or
			Kristoffer Rapacki, rapacki@cbs.dtu.dk.
		</documentation>
		<port name="WShERG_1_0c_ws0" binding="tns:WShERG_1_0c_ws0">
		<soapenv:address location="http://ws.cbs.dtu.dk:80/cgi-bin/soap/ws/quasi-1.2c.cgi?log"/>
		</port>
	</service>

</wsdl:definitions>
