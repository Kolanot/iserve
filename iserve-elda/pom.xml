<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>iserve-parent</artifactId>
        <groupId>uk.ac.open.kmi.iserve</groupId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>iserve-elda</artifactId>
    <packaging>war</packaging>

    <name>iServe ELDA Plug-in</name>
    <description>
        This module set up ELDA as a iServe Web interface.
    </description>
    <developers>
        <developer>
            <id>cpedrinaci</id>
            <name>Carlos Pedrinaci</name>
            <email>c.pedrinaci-{AT}-open.ac.uk</email>
            <url>http://people.kmi.open.ac.uk/carlos/</url>
            <organization>Knowledge Media Institute - The Open University</organization>
            <organizationUrl>http://kmi.open.ac.uk</organizationUrl>
        </developer>
        <developer>
            <id>izzyblues</id>
            <name>Luca Panziera</name>
            <email>luca.panziera-{AT}-open.ac.uk</email>
            <organization>Knowledge Media Institute - The Open University</organization>
            <organizationUrl>http://kmi.open.ac.uk</organizationUrl>
        </developer>
    </developers>
    <organization>
        <name>Knowledge Media Institute - The Open University</name>
        <url>http://kmi.open.ac.uk</url>
    </organization>

    <dependencies>

        <dependency>
            <groupId>com.epimorphics.lda</groupId>
            <artifactId>elda-lda</artifactId>
            <version>1.2.34</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <!-- Jetty artifacts. Note: They do have transitive dependencies.  -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jsp</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlets</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-annotations</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--Obtain shared resources-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <!--Configuration resources-->
                    <execution>
                        <id>load-resources</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <resourceBundles>
                                <resourceBundle>
                                    ${project.parent.groupId}:iserve-shared-resources:${project.version}
                                </resourceBundle>
                            </resourceBundles>
                            <attached>false</attached>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>

                    <!--Test resources-->
                    <execution>
                        <id>load-test-resources</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <resourceBundles>
                                <resourceBundle>
                                    uk.ac.open.kmi:sws-test-collections:${test-collections.version}
                                </resourceBundle>
                            </resourceBundles>
                            <attached>false</attached>
                            <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--Copy resources to WEB-INF for tests-->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-log4j-properties</id>
                        <!-- run after packaging but before the integration test -->
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.build.finalName}
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${shared.resources.dir}</directory>
                                    <excludes>
                                        <exclude>config.properties</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-iserve-properties</id>
                        <!-- run after packaging but before the integration test -->
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/${project.build.finalName}/WEB-INF/classes
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${shared.resources.dir}</directory>
                                    <excludes>
                                        <exclude>log4j.properties</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure Integration Tests-->
            <!-- skip unit test run, tests to be executed during integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.15</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enable rapid testing. Jetty will be launched and stopped automatically for testing -->
            <!-- You may also launch it with Jetty: use 'mvn jetty:run' -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <webAppConfig>
                        <contextPath>/iserve</contextPath>
                        <containerIncludeJarPattern>
                            .*/.*jsp-api-[^/]*\.jar$|.*/.*jsp-[^/]*\.jar$|.*/.*taglibs[^/]*\.jar$
                        </containerIncludeJarPattern>
                    </webAppConfig>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopKey>foo</stopKey>
                    <stopPort>9999</stopPort>
                    <connectors>
                        <connector
                                implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9090</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
                <!-- Launch prior to testing -->
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run-exploded</goal>
                        </goals>
                        <configuration>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                            <daemon>true</daemon>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <repositories>
        <repository>
            <id>epi-public-repo</id>
            <name>Epimorphics Public Repository</name>
            <url>http://repository.epimorphics.com</url>
        </repository>
    </repositories>

</project>